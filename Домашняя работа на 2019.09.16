let rec math_expectation i n f sum=
if i = 0 then ((float_of_int sum)/.(float_of_int (n)))
         else (math_expectation (i - 1) n f (sum + (f i)));;

print_string "Math_expectation of first number from 1 to 999 is ";;
print_float (math_expectation 999 999 (fun x-> (match ((string_of_int x).[0]) with
                                                      '0'->0
                                                     |'1'->1
                                                     |'2'->2
                                                     |'3'->3
                                                     |'4'->4
                                                     |'5'->5
                                                     |'6'->6
                                                     |'7'->7
                                                     |'8'->8
                                                     |'9'->9)) 0);;


print_string "Math_expectation of first number from 1 to 500 is ";;
print_float (math_expectation 500 500 (fun x-> (match ((string_of_int x).[0]) with
                                                      '0'->0
                                                     |'1'->1
                                                     |'2'->2
                                                     |'3'->3
                                                     |'4'->4
                                                     |'5'->5
                                                     |'6'->6
                                                     |'7'->7
                                                     |'8'->8
                                                     |'9'->9)) 0);;
let rec max_num s i=
if i = (String.length s) then 0 else (match (s.[i]) with
                                                      '0'->max 0 (max_num s (i+1))
                                                     |'1'->max 1 (max_num s (i+1))
                                                     |'2'->max 2 (max_num s (i+1))
                                                     |'3'->max 3 (max_num s (i+1))
                                                     |'4'->max 4 (max_num s (i+1))
                                                     |'5'->max 5 (max_num s (i+1))
                                                     |'6'->max 6 (max_num s (i+1))
                                                     |'7'->max 7 (max_num s (i+1))
                                                     |'8'->max 8 (max_num s (i+1))
                                                     |'9'->max 9 (max_num s (i+1)));;

print_string "\n Math_expectation of max number from 1 to 999 is ";;
print_float (math_expectation 999 999 (fun x -> (max_num (string_of_int x) 0)) 0);;

print_string "\n Math_expectation of max number from 1 to 500 is ";;
print_float (math_expectation 500 500 (fun x -> (max_num (string_of_int x) 0)) 0);;

let rec chek n i=match n with
                 0->1
                |1-> if i > 0 then 1 else 0
                |_->let y = (n land 0b1) in
                    if y = 0 then (1 + (chek (n lsr 1) (i + 1)))
                      else if i = 0 then 0 else (1+ (chek (n lsr 1) (i - 1)));;

print_string "\n Math_expectation of first scob in a sequence of 7 brackets that ruch everything is ";;
print_float (math_expectation (0b1 lsl 7) (0b1 lsl 7) (fun x -> (chek x 0)) 0);;

let rec math_expectation_list l f i sum=
match l with
a::b->math_expectation_list b f (i+1) (sum + (f a))
|[]->(float_of_int sum)/.(float_of_int i);;

print_string "\n P that X ([1;-1;7;4;-10;6]) will be late is ";;
print_float (math_expectation_list [1;-1;7;4;-10;6] (fun x -> x) 0 0);;

let step x y= (int_of_float ((float_of_int x)**(float_of_int y)));;

print_string "\n P that number (length 5) is made of 0 and 1 is ";;
print_float (math_expectation ((step 10 5) - (step 10 4)) ((step 10 5)- (step 10 4)) (fun x -> if (max_num (string_of_int (x+(step 10 4))) 0) < 2 then 1 else 0) 0);;



